---
name: "boostcoin"
suites:
- "precise"
architectures:
- "amd64"
packages:
- "mingw-w64"
- "g++-mingw-w64"
- "git-core"
- "unzip"
- "nsis"
- "faketime"
- "autoconf2.13"
- "libtool"
- "automake"
- "pkg-config"
- "bsdmainutils"
reference_datetime: "2011-01-30 00:00:00"
remotes:
- "url": "https://github.com/savale/BoostCoin.git"
  "dir": "boostcoin"
files:
- "qt-win32-5.2.0-gitian-r3.zip"
- "qt-win64-5.2.0-gitian-r3.zip"
- "boost-win32-1.55.0-gitian-r6.zip"
- "boost-win64-1.55.0-gitian-r6.zip"
- "bitcoin-deps-win32-gitian-r12.zip"
- "bitcoin-deps-win64-gitian-r12.zip"
script: |
  # Defines
  export TZ=UTC
  INDIR=$HOME/build
  OPTFLAGS='-O2'
  TEMPDIR="$HOME/tempdir"
  # Qt: workaround for determinism in resource ordering
  # Qt5's rcc uses a QHash to store the files for the resource.
  # A security fix in QHash makes the ordering of keys to be different on every run
  # (https://qt.gitorious.org/qt/qtbase/commit/c01eaa438200edc9a3bbcd8ae1e8ded058bea268).
  # This is good in general but qrc shouldn't be doing a traversal over a randomized container.
  # The thorough solution would be to use QMap instead of QHash, but this requires patching Qt.
  # For now luckily there is a test mode that forces a fixed seed.
  export QT_RCC_TEST=1
  for BITS in 32 64; do # for architectures
    #
    STAGING=$HOME/staging${BITS}
    BUILDDIR=$HOME/build${BITS}
    BINDIR=$OUTDIR/$BITS
    if [ "$BITS" == "32" ]; then
      HOST=i686-w64-mingw32
    else
      HOST=x86_64-w64-mingw32
    fi
    export PATH=$STAGING/host/bin:$PATH
    mkdir -p $STAGING $BUILDDIR $BINDIR
    #
    cd $STAGING
    unzip $INDIR/qt-win${BITS}-5.2.0-gitian-r3.zip
    unzip $INDIR/boost-win${BITS}-1.55.0-gitian-r6.zip
    unzip $INDIR/bitcoin-deps-win${BITS}-gitian-r12.zip

    # Build platform-dependent executables from source archive
    cd $HOME/build/boostcoin
    sudo chmod 777 src/leveldb/build_detect_platform
    export PATH=$STAGING/host/bin:$PATH
    mkdir -p $OUTDIR/src
    git archive HEAD | tar -x -C $OUTDIR/src
    cp $OUTDIR/src/doc/README_windows.txt $OUTDIR/readme.txt
    cp $OUTDIR/src/COPYING $OUTDIR/COPYING.txt
    export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1
    export FAKETIME=$REFERENCE_DATETIME
    export TZ=UTC
    ln -s $STAGING $HOME/qt
    $HOME/staging/host/bin/qmake -spec unsupported/win32-g++-cross MINIUPNPC_LIB_PATH=$STAGING MINIUPNPC_INCLUDE_PATH=$STAGING BDB$
    make $MAKEOPTS
    $HOST-strip release/boostcoin-qt.exe
  done # for BITS in

  # sort distribution tar file and normalize user/group/mtime information for deterministic output
  mkdir -p $OUTDIR/src
  rm -rf $TEMPDIR
  mkdir -p $TEMPDIR
  cd $TEMPDIR
  tar -xvf $HOME/build/bitcoin/$DISTNAME | sort | tar --no-recursion -cT /dev/stdin --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 --mtime="$REFERENCE_DATETIME" | gzip -n > $OUTDIR/src/$DISTNAME
